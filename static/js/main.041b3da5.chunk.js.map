{"version":3,"sources":["Components/Leaderboard.js","App.js","reportWebVitals.js","index.js"],"names":["Leaderboard","props","sortUsersByTime","bind","sortUsersByName","filterRank","increasePage","decreasePage","state","users","ranking","asc","alph","page","pageMax","this","paginate","sort","compareTimes","map","user","index","rank","Math","ceil","setState","length","a","b","time","name","compareName","reverse","e","newRanking","inputLength","target","value","i","slice","toLowerCase","push","className","onChange","type","placeholder","id","onClick","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.041b3da5.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './styles.css';\nclass Leaderboard extends Component{\n    constructor(props) {\n        super(props);\n\n        this.sortUsersByTime = this.sortUsersByTime.bind(this);\n        this.sortUsersByName = this.sortUsersByTime.bind(this);\n        this.filterRank = this.filterRank.bind(this);\n        this.increasePage = this.increasePage.bind(this);\n        this.decreasePage = this.decreasePage.bind(this);\n\n        this.state = {\n            users: this.props.users,\n            ranking: [],\n            asc: false,\n            alph: false,\n            page: 1,\n            pageMax: 1,\n        };\n    }\n    componentDidMount() {\n        const ranking = this.state.users;\n        const paginate = this.props.paginate;\n        ranking.sort(this.compareTimes);\n        ranking.map((user, index) => user.rank = index +1);\n        ranking.map((user, index) => user.page = Math.ceil((index+1)/paginate));\n        this.setState({ pageMax: ranking[ranking.length - 1].page})\n        this.setState({ ranking: ranking});\n      }\n    compareTimes(a, b)\n    {\n        if(a.time < b.time)\n        {\n            return -1;\n        }\n        if(b.time < a.time)\n        {\n            return 1;\n        }\n        return 0;\n    }\n    compareName(a,b) {\n        if (a.name < b.name)\n          return -1;\n        if (a.name > b.name)\n          return 1;\n        return 0;\n    }\n    sortUsersByName() {\n        const ranking = this.state.ranking;\n        const paginate = this.props.paginate;\n        if(this.state.alph === true) {\n            ranking.sort(this.compareName).reverse();\n            ranking.map((user, index) => user.page = Math.ceil((index+1)/paginate));\n            this.setState({ ranking: ranking});\n            this.setState({ alph: false});\n            this.setState({ asc: true});\n            } else {\n            ranking.sort(this.compareName);\n            ranking.map((user, index) => user.page = Math.ceil((index+1)/paginate));\n            this.setState({ ranking: ranking});\n            this.setState({ alph: true});\n            this.setState({ asc: true});\n            }\n          }\n    sortUsersByTime() {\n        const ranking = this.state.ranking;\n        const paginate = this.props.paginate;\n        if(this.state.asc === true) {\n          ranking.sort(this.compareTimes);\n          ranking.map((user, index) => user.page = Math.ceil((index+1)/paginate));\n          this.setState({ ranking: ranking});\n          this.setState({ asc: false});\n          this.setState({ alph: false});\n        } else {\n          ranking.sort(this.compareTimes).reverse();\n          ranking.map((user, index) => user.page = Math.ceil((index+1)/paginate));\n          this.setState({ ranking: ranking});\n          this.setState({ asc: true});\n          this.setState({ alph: false});\n        }\n      }\n    filterRank(e) {\n        const ranking = this.state.users;\n        const paginate = this.props.paginate;\n        const newRanking = [];\n        const inputLength = e.target.value.length;\n\n        for(var i = 0; i < ranking.length; i++) {\n          const str = ranking[i].name.slice(0, inputLength).toLowerCase();\n          if(str === e.target.value.toLowerCase()) {\n            newRanking.push(ranking[i]);\n          }\n        }\n        newRanking.sort(this.compareTimes);\n        newRanking.map((user, index) => user.page = Math.ceil((index+1)/paginate));\n        this.setState({ ranking: newRanking});\n        this.setState({ page: 1});\n        if(newRanking.length > 0){\n          this.setState({ pageMax: newRanking[newRanking.length - 1].page})\n        }\n      }\n    increasePage(e) {\n        let page = this.state.page;\n        if(page < this.state.pageMax){\n          page += 1;\n        }\n        this.setState({ page: page});\n      }\n    decreasePage(e)\n    {\n        let page = this.state.page;\n        if(page > 1)\n        {\n          page -= 1;\n        }\n        this.setState({ page: page});\n      }\n      render() {\n        return (\n          <div>\n            <h1>Covid Testing World Record Any% Leaderboard</h1>\n            <form className='search-bar' onChange={this.filterRank}>\n              <input type=\"search\" name=\"search\" placeholder=\"Name\"/>\n            </form>\n            <table id=\"lBoard\" className='fancy-table'>\n              <tbody className='ranking'>\n                <tr>\n                  <td className='rank-header sortTime' onClick={ this.sortUsersByTime }> Rank </td>\n                  <td className='rank-header sortAlpha' onClick={ this.sortUsersByName }> Name </td>\n                  <td className='rank-header' onClick={ this.sortUsersByTime }> Time </td>\n                </tr>\n                {\n                this.state.ranking.map((user, index) =>\n                   <tr className='ranking' key={index}>\n                    { user.page === this.state.page ? <td className='data'>{ user.rank }</td> : null }\n                    { user.page === this.state.page ? <td className='data'>{ user.name }</td> : null }\n                    { user.page === this.state.page ? <td className='data'>{ user.time }</td> : null }\n                   </tr>\n                 )\n               }\n              </tbody>\n            </table>\n            <button className='page-select' onClick={ this.decreasePage }><span>&#8249;</span></button>\n            { this.state.page === 1 ? null: <p onClick={ this.decreasePage }> { this.state.page - 1 }</p>}\n            <button> { this.state.page }</button>\n            { this.state.page < this.state.pageMax ? <p onClick={ this.increasePage }> { this.state.page + 1 }</p>: null }\n            <button className='page-select' onClick={ this.increasePage }><span>&#8250;</span></button>\n          </div>\n\n        )};\n\n};\nexport default Leaderboard;\n","import React, { Component } from 'react';\nimport { render } from 'react-dom';\nimport Leaderboard from './Components/Leaderboard';\n\nclass App extends Component {\n  constructor(props) {\n  super(props);\n  this.state = {\n    users: [{name: \"Bop\", time:  \"1:54.87\"},\n            {name: \"Banana Man\", time: \"2:23.63\"},\n            {name: \"Matt M\", time: \"2:52.60\"},\n            {name: \"Phi11ipus\", time: \"2:45.20\"},\n            {name: \"Alex\", time: \"2:05.85\"}\n\n          ],\n    paginate: 20\n  };\n}\n  render() {\n    return (\n      <div className=\"App\">\n        <Leaderboard users={this.state.users} paginate={this.state.paginate}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}